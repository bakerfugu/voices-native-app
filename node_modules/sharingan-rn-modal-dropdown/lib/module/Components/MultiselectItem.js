import React from 'react';
import { View, Text, StyleSheet } from 'react-native';
import { Avatar } from 'react-native-paper';
import MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';
import Lo from 'lodash';
import { colors, ITEMLAYOUT } from '../constants';
import PressableTouch from './PressableTouch';
const defaultProps = {
  selectedColor: colors.primary,
  itemTextStyle: {},
  itemContainerStyle: {},
  rippleColor: 'rgba(0,0,0,0.1)',
  enableAvatar: false
};

const defaultAvatar = require('../assets/ddicon.png');

const MultiselectItem = ({
  item,
  selected,
  onSelect,
  selectedColor,
  itemTextStyle,
  itemContainerStyle,
  rippleColor,
  disabled,
  enableAvatar,
  avatarSize,
  disableSelectionTick,
  selectedItemTextStyle,
  selectedItemViewStyle
}) => {
  const {
    label,
    value,
    avatarSource
  } = item;
  const styles = StyleSheet.create({
    unselected: {
      color: colors.unselected,
      paddingLeft: 5
    },
    selected: {
      color: selectedColor,
      paddingLeft: 5
    },
    listView: {
      flex: 1,
      paddingVertical: 10,
      height: ITEMLAYOUT,
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'center'
    },
    iconView: {
      width: 30
    },
    textView: {
      alignItems: 'center',
      flexDirection: 'row'
    },
    avatarView: {
      backgroundColor: 'transparent'
    }
  });

  const handleSelectValue = () => {
    onSelect(value);
  };

  const getSelectedStyles = () => {
    if (!Lo.isEmpty(selectedItemTextStyle)) {
      return { ...styles.selected,
        ...selectedItemTextStyle
      };
    } else return styles.selected;
  };

  return /*#__PURE__*/React.createElement(PressableTouch, {
    onPress: handleSelectValue,
    disabled: disabled,
    key: Math.random().toString(),
    rippleColor: rippleColor
  }, /*#__PURE__*/React.createElement(View, {
    style: [styles.listView, itemContainerStyle, selected.includes(value) ? selectedItemViewStyle : {}]
  }, /*#__PURE__*/React.createElement(View, {
    style: styles.textView
  }, enableAvatar && /*#__PURE__*/React.createElement(Avatar.Image, {
    size: avatarSize,
    style: styles.avatarView,
    source: avatarSource || defaultAvatar
  }), /*#__PURE__*/React.createElement(Text, {
    style: [itemTextStyle, selected.includes(value) ? getSelectedStyles() : styles.unselected]
  }, label)), /*#__PURE__*/React.createElement(View, {
    style: styles.iconView
  }, selected.includes(value) && !disableSelectionTick ? /*#__PURE__*/React.createElement(MaterialCommunityIcons, {
    name: "check",
    size: 18,
    color: selectedColor
  }) : null)));
};

MultiselectItem.defaultProps = defaultProps;
export default MultiselectItem;
//# sourceMappingURL=MultiselectItem.js.map